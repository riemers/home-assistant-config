################################################################
## Packages / Vacuum
##
## Found on https://raw.githubusercontent.com/Norien/Home-Assistant-Config/master/packages/vacuum.yaml
## blid and password found with https://github.com/koalazak/dorita980#how-to-get-your-usernameblid-and-password
################################################################
homeassistant:
  customize:
    automation.vacuum_auto:
      friendly_name: Auto Clean
      icon: mdi:robot-vacuum
    vacuum.roomba:
      google_assistant: true
      google_assistant_name: "roomba"
    sensor.roomba_runtime:
      friendly_name: Runtime This Week
    sensor.roomba_last_run:
      friendly_name: Last Clean
      icon: mdi:calendar-range

# Toggle vacuum as we come and go
automation:
  - alias: 'Start the roomba automaticly as we come and go'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: group.common_people
        to: 'away'
      - platform: state
        entity_id: group.common_people
        to: 'home'
    action:
      - service_template: >
          {% if group.common_people == 'away' %}
          vacuum.turn_on
          {% else %}
          vacuum.turn_off
          {% endif %}
        entity_id: vacuum.roomba
    condition:
      condition: and
      conditions:      
      - condition: time  
        after: '07:00:00'
        before: '14:00:00'     
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.start_roomba_while_we_are_away.attributes.last_triggered) | int > 86400â€¬ }}'

  - alias: 'vacuum_watchdog'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.roomba_status
        to: 'Charging'
      - platform: numeric_state
        entity_id: sensor.battery_roomba
        above: 50
    condition:
      - condition: state
        entity_id: group.common_people
        state: 'away'
      - condition: numeric_state
        entity_id: sensor.battery_roomba
        above: 50
    action:
      - service: vacuum.turn_on
        entity_id: vacuum.roomba

  - alias: 'vacuum_status'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.roomba_status
        from: 'Docking - End Mission'
        to: 'Charging'
      - platform: state
        entity_id: sensor.roomba_status
        from: 'User Docking'
        to: 'Charging'
      - platform: state
        entity_id: sensor.roomba_status
        from: 'Docking'
        to: 'Charging'
      - platform: state
        entity_id: sensor.roomba_status
        from: 'User Docking'
        to: 'Dead'
    action:
      - service: mqtt.publish
        data_template:
          topic: homeassistant/vacuum
          retain: true
          payload: "{{as_timestamp(now())|timestamp_custom('%h %d,%H:%M')}}"

  - alias: 'Roomba bin full'
    trigger:
      platform: template
      value_template: "{%if is_state_attr('vacuum.roomba', 'bin_full', true) %}true{%endif%}"
    action:
    - service: notify.ios_ierik
      data:
        message: 'Roomba bin is full, please empty it'
        
# NOTIFY IF STUCK or DEAD
  - alias: 'Vacuum Alert'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.roomba_status
        to: 'Stuck'
      - platform: state
        entity_id: sensor.roomba_status
        to: 'Dead'
    action:
      - service: script.sonos_say
        data:
          call_greeting: 1
          call_inform: 1
        data_template:
          CustomMessage: >-
            {% set status = states.sensor.roomba_status.state %}
            {% if status =="Stuck" %}
            Roomba is Stuck
            {% elif status =="Dead" %}
            Roomba is Dead
            {% else %}
            {{status}}
            {% endif %}
sensor:
###### Pull out the battery and status data for use in frontend display.
  - platform: template
    sensors:
      battery_roomba:
        friendly_name: 'Roomba'
        value_template: "{{ states.vacuum.roomba.attributes.battery_level|int }}"
        unit_of_measurement: '%'
        icon_template: "{{ states.vacuum.roomba.attributes.battery_icon }}"
      roomba_status:
        friendly_name: 'Status'
        value_template: >-
          {%-set battery = states.vacuum.roomba.attributes.battery_level -%}
          {%-set status = states.vacuum.roomba.attributes.status -%}
          {%-set unknown = states.vacuum.roomba.state -%}
          {%-if battery|int == 100 and status =="Charging"-%} Ready
          {%-elif battery|int== 0 and status =="Charging"-%} Charging
          {%-elif battery|int== 0-%} Dead
          {%-else-%} {{status}}
          {%-endif-%}
        icon_template: >-
          {% if is_state('sensor.roomba_status', "Ready") %} mdi:checkbox-marked-circle
          {% elif is_state('sensor.roomba_status', "Charging") %} mdi:flash-circle
          {% elif is_state('sensor.roomba_status', "New Mission") %} mdi:checkbox-marked-circle
          {% elif is_state('sensor.roomba_status', "Running") %} mdi:donkey
          {% elif is_state('sensor.roomba_status', "Stuck") %} mdi:alert-circle
          {% elif is_state('sensor.roomba_status', "User Docking") %} mdi:home-circle
          {% elif is_state('sensor.roomba_status', "Docking - End Mission") %} mdi:home-circle
          {% elif is_state('sensor.roomba_status', "Docking") %} mdi:home-circle
          {% elif is_state('sensor.roomba_status', "Paused") %} mdi:pause-circle
          {% elif is_state('sensor.roomba_status', "Stopped") %} mdi:stop-circle
          {% elif is_state('sensor.roomba_status', "Dead") %} mdi:skull
          {% else %} mdi:checkbox-marked-circle
          {% endif %}
  - platform: history_stats
    name: roomba_runtime
    entity_id: sensor.roomba_status
    state: 'Running'
    start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
    end: '{{ now() }}'
  - platform: mqtt
    name: roomba_last_run
    state_topic: "homeassistant/vacuum"